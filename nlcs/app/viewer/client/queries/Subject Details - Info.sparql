PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl:  <http://www.w3.org/2002/07/owl#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX vs:   <http://www.w3.org/2003/06/sw-vocab-status/ns#>
PREFIX nen2660: <https://w3id.org/nen2660/def#>
PREFIX dash: <http://datashapes.org/dash#>
PREFIX sh:   <http://www.w3.org/ns/shacl#>
PREFIX mim:  <http://bp4mc2.org/def/mim#>
PREFIX schema: <https://schema.org/>

SELECT DISTINCT ?group_text ?group_iri ?entry_iri ?entry_text ?entry_icon
WHERE {
    {  
#########################
# This query returns the 'Attributes' (as defined in the BPL) for a given concept.
#
# INPUT:
#   ?term_iri: The IRI of the concept
#########################

        ?shape      sh:targetClass      ?term_iri .
        ?shape      sh:property         ?property .   
        ?property   sh:path             ?path  .
        ?path       skos:prefLabel      ?pathLabel .
    
        OPTIONAL{   ?property       sh:hasValue     ?value  .
                    ?value          skos:prefLabel  ?valueLabel } .
        OPTIONAL{   ?property       sh:class        ?targetClass  .
                    ?targetClass    skos:prefLabel  ?targetClassLabel } .
        OPTIONAL{   ?property       sh:maxCount     ?maxCount } .
        OPTIONAL{   ?property       sh:minCount     ?minCount } .
        OPTIONAL{   ?property       sh:qualifiedMaxCount     ?qmaxCount } .
        OPTIONAL{   ?property       sh:qualifiedMinCount     ?qminCount } .
        OPTIONAL{   ?property       sh:datatype     ?datatypeTarget}.
        
        BIND(CONCAT(IF(BOUND(?minCount), STR(?minCount), IF(BOUND(?qminCount), STR(?qminCount), "0")), ":", 
                    IF(BOUND(?maxCount), STR(?maxCount), IF(BOUND(?qmaxCount), STR(?qmaxCount), "n"))) AS ?entry_badge) .

        BIND(IF(BOUND(?value),?value,?targetClass) AS ?target)
        BIND(IF(BOUND(?value),?valueLabel,?targetClassLabel) AS ?targetLabel)

        BIND (?pathLabel AS ?group_text) 
        BIND (?path AS ?group_iri) 
        BIND (?targetLabel AS ?entry_text) 
        BIND (?target AS ?entry_iri) 
    }

    UNION {
#########################
# This query returns the 'Information Attributes' (as defined in the BPL) for a given concept.
#
# 
# INPUT:
#   ?term_iri: The IRI of the term
#########################

        {  # Retrieve the  predicates
            ?term_iri ?p ?o .
            FILTER(?p NOT IN (sh:in)) .  # using owl:oneOf
        }  
            
        BIND (IF (?p IN (rdfs:label, skos:prefLabel), "Label",
            IF (?p IN (rdf:type), "Type", 
            IF (?p IN (skos:altLabel), "Synonym", 
            IF (?p IN (skos:notation), "Code",
            IF (?p IN (skos:example), "Example",
            IF (?p IN (rdfs:comment), "Comment", 
            IF (?p IN (skos:definition), "Definition",
            IF (?p IN (nen2660:abbreviation), "Abbreviation", 
            IF (?p IN (rdfs:domain), "Domain", 
            IF (?p IN (rdfs:range), "Range", 
            IF (?p IN (vs:term_status), "Status",
            IF (?p IN (owl:oneOf), "Possible values",
            IF (?p IN (rdf:value), "Value",
            IF (?p IN (skos:scopeNote), "Scope note",
            IF (?p IN (rdfs:subClassOf), "Subclass of",
            IF (?p IN (rdfs:subPropertyOf), "Subproperty of",
            IF (?p IN (rdfs:member), "Collection",
            IF (?p IN (skos:note), "Note", 
            IF (?p IN (skos:related), "Related", 
            IF (?p IN (owl:equivalentClass), "Equivalent", 
            IF (?p IN (schema:unitText), "Unit",
            IF (?p IN (schema:url), "Bestandslocatie",
            IF (?p IN (rdfs:seeAlso), "See also", ?empty)))))))))))))))))))))))
            AS ?textPropertyRecognized) .

        OPTIONAL {
            ?p skos:prefLabel ?textPropertyFound .
        }

        BIND (COALESCE(?textPropertyRecognized, ?textPropertyFound, ?p) AS ?group_text) .
        BIND (?p AS ?group_iri) .

        {  # Retrieve the Literal objects 
            ?term_iri ?p ?o .
            FILTER (isLiteral(?o)) .
            BIND (?o AS ?entry_a) .
            BIND (IF(LANG(?o)!="",CONCAT("flag-icon flag-icon-", LANG(?o)),"") AS ?entry_icon) .
        
        } 
        UNION
        {  # Retrieve the IRI objects
            ?term_iri ?p ?o .
            FILTER (isIRI(?o) && !isBlank(?o) && ?p != owl:oneOf && ?p != sh:in) .
            OPTIONAL {
                ?o skos:prefLabel ?oLabel .
                BIND(STR(?oLabel) AS ?textObjectFound ) .
            }
            BIND (IF(contains(str(?o),"#"),strafter(str(?o), "#"),REPLACE(str(?o),"(.*)[//]","")) AS ?textObjectLocalname) .
            BIND (COALESCE(?textObjectFound, ?textObjectLocalname) AS ?entry_a) .
            BIND (?o AS ?entry_iri_a) .
        }
        UNION
        {  # Retrieve the enumerations
            ?term_iri owl:oneOf ?o .
            ?value a ?term_iri .    
            ?value skos:prefLabel ?valueName .
            BIND (?value AS ?entry_iri_a) .
            BIND (?valueName AS ?entry_a) .
        }
    
    #These binds make sure that IRI are also presented as a string, so these can be copied to the clipboard 
        VALUES ?plattetekst
        {
        "/term/"
        "/qudt"
        "nen2660"
        "nen3610"
        "contractspecificaties"
        }

        BIND (IF(CONTAINS(STR(?entry_iri_a),?plattetekst) = true, STR(?entry_iri_a), ?entry_a) AS ?entry_b) .
        BIND (IF(CONTAINS(STR(?entry_iri_a),?plattetekst) = true, "", ?entry_iri_a) AS ?entry_t) . 
        BIND(COALESCE(?entry_b, ?entry_a) AS ?entry_text) .
        BIND(COALESCE(?entry_t, ?entry_iri_a) AS ?entry_iri) .
    }

    UNION {
        
#########################
# This query returns the 'Relations' (as defined in the BPL) for a given concept.
#
# INPUT:
#   ?term_iri: The IRI of the concept
#########################

        ?shape      sh:targetClass      ?term_iri .
        ?shape      sh:property         ?property .   
        ?property   sh:path             ?path  .
        ?property   sh:qualifiedValueShape ?qualifiedValueShape .
        ?qualifiedValueShape    sh:class    ?targetClass .

        OPTIONAL{   ?property       sh:maxCount     ?maxCount } .
        OPTIONAL{   ?property       sh:minCount     ?minCount } .
        OPTIONAL{   ?property       sh:qualifiedMaxCount     ?qmaxCount } .
        OPTIONAL{   ?property       sh:qualifiedMinCount     ?qminCount } .
        OPTIONAL{   ?targetClass    skos:prefLabel  ?targetClassLabel} .
        OPTIONAL{   ?object         skos:prefLabel  ?objectLabel }.
        
        BIND (CONCAT(IF(BOUND(?minCount), STR(?minCount), "0"), ":", 
                     IF(BOUND(?maxCount), STR(?maxCount), "n")) AS ?entry_badge) .

        BIND(IF(STR(?path) = "https://w3id.org/nen2660/def#isDescribedBy", 
                IF(STRSTARTS(?targetClassLabel, "A"), "Arcering", 
                    IF(STRSTARTS(?targetClassLabel, "S"), "Symbool", "isDescribedBy")), ?path) AS ?pathLabel)

        BIND (?pathLabel AS ?group_text) 
        BIND (?path AS ?group_iri) 
        BIND (?targetClassLabel AS ?entry_text) 
        BIND (?targetClass AS ?entry_iri) 
    }

    BIND (IF (?group_text = "Type", 10, 
        IF (?group_text = "Label", 20, 
        IF (?group_text = "Subclass of", 30,
        IF (?group_text = "Subproperty of", 40,
        IF (CONTAINS(?group_text, "B "), 50,
        IF (CONTAINS(?group_text, "N "), 60,
        IF (CONTAINS(?group_text, "T "), 70,
        IF (CONTAINS(?group_text, "V "), 80,
        IF (?group_text = "Arcering", 90, 
        IF (?group_text = "Symbool", 91, 
        IF (?group_text = "ID", 100000,
        IF (?group_text = "Element", 100001,
        IF (?group_text = "Possible values", 100,
        IF (?group_text = "Code", 21,
        IF (?group_text = "Value", 22,
        IF (?group_text = "Definition", 23,
        IF (?group_text = "Note", 24,
        IF (?group_text = "Example", 25,
        IF (?group_text = "Abbrevation", 26,
        IF (?group_text = "Synonym", 27, 
        IF (?group_text = "See also", 28, 
        IF (?group_text = "In list", 101, 
        IF (?group_text = "Describes", 120,
        IF (?group_text = "Transforms", 130,
        IF (?group_text = "Scope note", 140,
        IF (?group_text = "Referred standard", 150,
        IF (?group_text = "Owner", 160,
        IF (?group_text = "Domain", 170,
        IF (?group_text = "Range", 180,
        IF (?group_text = "Status", 190, 220))))))))))))))))))))))))))))))
        AS ?sequence) .

}
ORDER BY ?sequence STR(?group_text) STR(?entry_text) STR(?entry_iri) ?entry_icon